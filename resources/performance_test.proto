syntax = "proto3";
package perftest;
import "google/protobuf/timestamp.proto";

service PerformanceTest {
    rpc UnaryCall (TestRequest) returns (TestResponse) {}
    rpc ServerStreaming (StreamRequest) returns (stream TestResponse) {}
    rpc ClientStreaming (stream TestRequest) returns (StreamResponse) {}
    rpc BidirectionalStreaming (stream TestRequest) returns (stream TestResponse) {}
    rpc PingPong (PingRequest) returns (PongResponse) {}
    rpc BatchProcess (BatchRequest) returns (BatchResponse) {}
}

// Requests 
message TestRequest {
    string request_id = 1;
    google.protobuf.Timestamp timestamp = 2;
    PayloadSize payload_size = 3;
    bytes payload = 4;
    map<string, string> metadata = 5;
}

message StreamRequest {
    int32 message_count = 1;
    PayloadSize payload_size = 2;
    int32 interval_ms = 3;
}

message PingRequest {
    string client_id = 1;
    google.protobuf.Timestamp send_timestamp = 2;
}

message BatchRequest {
    repeated TestRequest requests = 1;
    bool parallel_process = 2;
}

// Metrics
message ProcessingMetrics {
    int64 processing_time_us = 1;
    int64 memory_used_bytes = 2;
    float cpu_usage = 3;
    repeated string errors = 4;
}

// Responses
message TestResponse {
    string request_id = 1;
    google.protobuf.Timestamp received_at = 2;
    google.protobuf.Timestamp processed_at = 3;
    ProcessingMetrics metrics = 4;
    bytes payload = 5;
}

message StreamResponse {
    int32 messages_processed = 1;
    ProcessingMetrics aggregate_metrics = 2;
}

message PongResponse {
    string client_id = 1;
    google.protobuf.Timestamp client_timestamp = 2;
    google.protobuf.Timestamp server_timestamp = 3;
}

message BatchResponse {
    repeated TestResponse responses = 1;
    ProcessingMetrics batch_metrics = 2;
}

enum PayloadSize {
    EMPTY = 0;
    SMALL = 1;    // 1KB
    MEDIUM = 2;   // 10KB
    LARGE = 3;    // 100KB
    XLARGE = 4;   // 1MB
}